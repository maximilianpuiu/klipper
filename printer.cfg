# This is a Klipper configuration for TronXY X5SA, with
# CXY-V6 motherboard.


#            === FLASHING WITH STOCK BOOTLOADER ===
# You should make firmware for STM32F103 with bootloader offset
# at 0x8008800 (Chitu v6 Bootloader). Uncheck USB, and leave default
# serial settings.
#
# Use "./scripts/update_chitu.py ./out/klipper.bin ./out/update.cbd" after make to generate update.cbd.
# Put `update.cbd` onto SD card, and reboot the printer.
# It will be automatically installed, and you will be able to update it this way.

[include mainsail.cfg]

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: corexy
max_velocity: 400
max_accel: 4500
max_z_velocity: 25
max_z_accel: 30

[stepper_x]
step_pin: PE5
dir_pin: !PE6
enable_pin: !PC13
microsteps: 16
rotation_distance: 20
endstop_pin: !PG10
position_endstop: -1
position_min: -1
position_max: 350
homing_speed: 50
homing_retract_dist: 10
second_homing_speed: 10.0

[stepper_y]
step_pin: PE2
dir_pin: !PE3
enable_pin: !PE4
microsteps: 16
rotation_distance: 20
endstop_pin: !PA12
position_endstop: 0
position_max: 330
homing_retract_dist: 10
homing_speed: 50.0
second_homing_speed: 10.0

[stepper_z]
step_pin: PB9
dir_pin: PE0
enable_pin: !PE1
microsteps: 16
rotation_distance: 4
endstop_pin: probe:z_virtual_endstop
position_max: 368
position_min: 0

[extruder]
step_pin: PB4
dir_pin: PB5
enable_pin: !PB8
microsteps: 32
rotation_distance: 22.478 # Titan Extruder Clone Rotation Distance
gear_ratio: 66:22 # Titan Extruder Clone Gear Ratio
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PG12
sensor_type: ATC Semitec 104GT-2
sensor_pin: PA1
control: pid
pid_Kp: 18.831
pid_Ki: 0.821
pid_Kd: 108.044
min_temp: 0
max_temp: 260
max_extrude_only_distance: 300
pressure_advance: 0.02
#pressure_advance: 0.05


[heater_bed]
heater_pin: PG11
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
control: pid
min_temp: 0
max_temp: 130
pid_Kp: 73.932
pid_Ki: 1.521
pid_Kd: 898.279


[verify_heater heater_bed]
heating_gain: 1
check_gain_time: 120

[heater_fan hotend_fan]
pin: PG14
fan_speed: 1


[fan]
pin: PG13
max_power: 0.75


[controller_fan drivers_fan]
pin: PD6

[filament_switch_sensor sentinel]
pause_on_runout: True
runout_gcode:
  M25
switch_pin: PA15

[output_pin beeper]
pin: PB0
pwm: True
pwm: True
value: 0
shutdown_value: 0
cycle_time: 0.001
scale: 1000


#[gcode_macro M300]
#gcode:  SET_PIN PIN=beeper VALUE={S}
#        G4 P{P}
#		{% set S = params.S|default(1000) %}
#		{% set P = params.P|default(100) %}
#SET_PIN PIN=beeper VALUE=0

[safe_z_home]
home_xy_position: 205,165
speed: 50
z_hop: 10
z_hop_speed: 5

[bed_screws]
screw1: 5,5
screw2: 165,5
screw3: 325,5
screw4: 5,325
screw5: 165,325
screw6: 325,325

[bed_mesh]
speed: 120
probe_count: 5,5
horizontal_move_z: 5
algorithm: lagrange
mesh_min : 50,50
mesh_max : 280,280
mesh_pps: 0

#[temperature_sensor Raspberry]
#sensor_type: temperature_host
#min_temp: 10
#max_temp: 80

[temperature_sensor MCU]
sensor_type: temperature_mcu
min_temp: 10
max_temp: 80


[bltouch]
sensor_pin: PG9
control_pin: PD12
samples: 2
sample_retract_dist: 3.0
probe_with_touch_mode: True
x_offset: -40
y_offset: 0
#z_offset: 3.3





[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None
[resonance_tester]
accel_chip: adxl345
probe_points:
    100,100,20  # an example










#[gcode_macro POWER_OFF_PRINTER]
#gcode:
#  {action_call_remote_method("set_device_power",
#                             device="tasmota_plug",
#                             state="off")}
#



[idle_timeout]
timeout: 600
gcode:
  M84
  TURN_OFF_HEATERS
  POWER_OFF_PRINTER
#[probe]
#x_offset: -30
#y_offset: 0
#pin: !PG9
#speed: 30
#z_offset: 0.7

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*#     -0.148750, -0.053750, -0.030000, -0.008125, 0.041250
#*#     -0.105000, -0.023125, -0.005000, -0.001875, 0.036875
#*#     -0.046250, 0.015625, 0.029375, 0.008125, 0.038750
#*#     -0.023125, 0.019375, -0.007500, -0.023125, 0.000000
#*#     -0.019375, 0.010625, -0.038125, -0.066875, -0.036875
#*# tension = 0.2
#*# min_x = 50.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 0
#*# min_y = 50.0
#*# x_count = 5
#*# max_y = 280.0
#*# mesh_x_pps = 0
#*# max_x = 280.0
#*#
#*# [bed_mesh 1]
#*# version = 1
#*# points =
#*#     -0.101250, -0.080000, -0.017500, 0.008750, 0.052500
#*#     -0.080000, -0.055000, -0.018750, 0.006250, 0.017500
#*#     -0.023750, -0.045000, -0.037500, -0.141250, -0.001250
#*#     0.002500, -0.030000, -0.027500, -0.052500, -0.041250
#*#     0.010000, -0.027500, -0.041250, -0.071250, -0.065000
#*# tension = 0.2
#*# min_x = 50.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 0
#*# min_y = 50.0
#*# x_count = 5
#*# max_y = 280.0
#*# mesh_x_pps = 0
#*# max_x = 280.0
#*#
#*#
#*# [bed_mesh 1]
#*# version = 1
#*# points =
#*#     -0.101250, -0.080000, -0.017500, 0.008750, 0.052500
#*#     -0.080000, -0.055000, -0.018750, 0.006250, 0.017500
#*#     -0.023750, -0.045000, -0.037500, -0.141250, -0.001250
#*#     0.002500, -0.030000, -0.027500, -0.052500, -0.041250
#*#     0.010000, -0.027500, -0.041250, -0.071250, -0.065000
#*# tension = 0.2
#*# min_x = 50.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 0
#*# min_y = 50.0
#*# x_count = 5
#*# max_y = 280.0
#*# mesh_x_pps = 0
#*# max_x = 280.0
#*#
#*# [bltouch]
#*# z_offset = 2.950
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 58.0
#*# shaper_type_y = ei
#*# shaper_freq_y = 54.8

